<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html> 
<title>Run All Workflow Schedule</title> 
<HEAD></head>
<style type="text/css" media="screen">div.visible { display: visible; } div.hidden { display: none; }</style>
<link href="/dCSS/Theme2/default/common.css", type="text/css" rel="stylesheet">
<link href="/dCSS/Theme2/default/custom.css", type="text/css" rel="stylesheet">
<link href="/css/assistive.css", type="text/css" rel="stylesheet">
<script src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js" type="text/javascript"></script>
<script type="text/javascript"> 
/*******************************/
var xmlhttp


var lastone = "true";
var childWindow;
var runstartup = false;	
function loadXMLDoc(url)
{
	childWindow =  open(url,"childWindow", "toolbar=no,menubar=no,width=600,height=500,resizable=yes");
	childWindow.moveTo(200, 100);
	Func1Delay();
}

function Func1()
{
	if(!childWindow.closed)
	{
		//alert("S-control Not Done yet..!");
		Func1Delay();
		
	}
	else{
		//alert("S-control Done..!");
		return;
	}
}
function Func1Delay()
{
	setTimeout("Func1()", 3000);
}

function loadXMLDoc1(url)
{
	//alert("running"+url);
	xmlhttp=null
// code for Mozilla, etc.
	if (window.XMLHttpRequest)
  	{
  		xmlhttp=new XMLHttpRequest()
  	}
// code for IE
	else if (window.ActiveXObject)
  	{
  		xmlhttp=new ActiveXObject("Microsoft.XMLHTTP")
  	}
	if (xmlhttp!=null)
  	{
  		xmlhttp.onreadystatechange=state_Change
  		xmlhttp.open("GET",url,true)
		xmlhttp.send(null)
  	}
	else
  	{
  		displayMessage("Your browser does not support XMLHTTP.")
  	}
}

function state_Change()
{
// if xmlhttp shows "loaded"
	if (xmlhttp.readyState==4)
  	{
  	// if "OK"
  		try{
	  		if (xmlhttp.status==200)
	  		{
				displayMessage("Success full run")
				runMessage =runMessage+ ":Success full run<br>";
	  		}
	  		else
			{
			    displayMessage("Problem retrieving XML data");
			    runMessage =runMessage+ ":Problem retrieving XML data<br>";
	    	}
    	}
    	catch(err){
			var txt="There was an error on this page.\n\n"
	        txt+="Error description: " + err.description + "\n\n"
          	txt+="Click OK to continue.\n\n"
        	runMessage =runMessage+ txt;
		}
  	}
}
/******************************/

var TWSchedule = new Array();
var TWScheduleNames = new Array();

//Window error handling
window.onerror = function ( strErr, strURL, strLineNumber ) {	
	if(strURL=="")
		strURL=document.location.href + "\n";
	var strMess =  "Error:\n";
	strMess += "URL: " + strURL + "\n";
	if(strLineNumber!=0)
		strMess += "<br>nline number: " + strLineNumber + "\n";
	strMess += "<br>Error Message: " + strErr + "\n";
	//return true;
}

//starting function
function startup1() {
	runstartup = true;
} 
function startup() { 
	var runMessage = "Processing Status:<br><br>";
	var out = document.getElementById('output');
	out.innerHTML = runMessage;
	if("{!User.Id}" != "00520000000vvl4") {	
		//Continue as this is not the AppExchange testdrive user
		// get session id and initialize the sforceClient object 
		sforceClient.init("{!API.Session_ID}", "{!API.Partner_Server_URL_70}"); 
		//check everything is ok 
		if (sforceClient.getSessionId().indexOf("!API_Session_ID") != -1) { 
			//alert("You are not logged in"); 
		} else { 
			//showDebug();
			//alert("d");
			//iterate through each workflow schedule object
			var qr = sforceClient.Query("Select Action__c, Active__c, Id, Last_Run__c, Name, Schedule_Name__c, Run_Every__c, Run_Frequency__c from APPR_Workflow_Schedule__c where Active__c = true"); 		
			var Last_Run;
			var Run_Every;
			var scheduleName;
			var Run_Frequency;
			var WorkflowSchedule ;
			if (qr.size > 0) {
				for(i=0;i<qr.size;i++) {				
					var runnow = false;
					try
					{
						Last_Run = qr.records[i].get("Last_Run__c");
						Run_Every = qr.records[i].get("Run_Every__c");
						Run_Frequency = qr.records[i].get("Run_Frequency__c");
						WorkflowSchedule = qr.records[i].get("Id");
						scheduleName = qr.records[i].get("Schedule_Name__c");
						if(Run_Frequency != null){
							if( Run_Frequency == "Days")
							{
								Run_Frequency = "d";
							}
							else
							{
								Run_Frequency ="h";
							}
						}
						try
						{
							var intDuration = DateDiff(Run_Frequency,Last_Run,Date());
							if(intDuration >Run_Every)
							{
								runnow = true;							
							}
							
						}
						catch(err){
							var txt="There was an error on this page.\n\n"
								txt+="Error description: " + err.description + "\n\n"
								txt+="Click OK to continue.\n\n"
								//alert(txt)
						}
						//alert("Last_Run:"+Last_Run+"\nRun_Every:"+Run_Every+"\nRun_Frequency:"+Run_Frequency);
						if(Last_Run == null)
						{
							runnow = true;
						}
					}
					catch(err){
						var txt="There was an error on this page.\n\n"
							txt+="Error description: " + err.description + "\n\n"
							txt+="Click OK to continue.\n\n"
							//alert(txt)
					}
					//alert("Adding the ws to run:"+runnow);
					if(runnow){
						var twsName = qr.records[i].get("Id");
						TWSchedule.push(twsName);
						TWScheduleNames.push(scheduleName);
					}
				}
			}
			if(TWSchedule.length >0) {
				//There are schedules to run. Pick the first one
				try
				{
					//alert("Running:"+TWSchedule[j]);
					var SCOid = TWSchedule[0];
					SCOid.substring(0,15);
					//runMessage =runMessage+":"+ SCOid+"<br>";
					try
					{
						
						var SCName = TWScheduleNames[0];
						runMessage = "<br>Processing:"+ SCName+"<br>";
						var out = document.getElementById('output');
						out.innerHTML += runMessage;
					}
					catch(err1)
					{
						var txt;
						txt="There was an error on this page.\n\n"
						txt+="Error description: " + err1.description + "\n\n"
						txt+="Click OK to continue.\n\n"
						//alert(txt)
					}
					//var SCRunUril = "https://www.salesforce.com/login.jsp?pw=BizCastle06&un=kumar@apprivotest.com&startURL=/servlet/servlet.Integration?lid=01N60000000Cxxe&eid="+TWSchedule[j];
					//var SCRunUril = "https://www.salesforce.com/login.jsp?pw=BizCastle06&un=kumar@apprivotest.com&startURL=/servlet/servlet.Integration?lid=00b60000000s0Xn&eid="+SCOid;
					//var SCRunUril = "https://www.salesforce.com/login.jsp?pw=BizCastle06&un=kumar@apprivotest.com&startURL=/servlet/servlet.Integration?lid=00b60000000s0Xn&eid="+SCOid;
					if(TWSchedule.length > 1) {
						//This is the last schedule to run. Let the 
						lastone = "false";
					}
					var SCRunUril = "/servlet/servlet.Integration?lid=01N2000000009EP&eid="+SCOid+"&callingfx=runall&lastone="+lastone;					
					loadXMLDoc(SCRunUril);
				}
				catch(err)
				{
					var txt;
					txt="There was an error on this page.\n\n"
					txt+="Error description: " + err.description + "\n\n"
					txt+="Click OK to continue.\n\n"
					//alert(txt)
				}
			}
			//runMessage = "<hr><center>Successfully processed all the Workflow schedules</center><br>";
			//var out = document.getElementById('output');
			//out.innerHTML += runMessage;
		}
	} else {
		window.location.href = "/servlet/servlet.FileDownload?file=015200000006plq";
	}
	setTimeout("shutDown()", 2000);
} 

function DateDiff(p_Interval,p_Date_1, p_Date_2){
    if(!Sforce.Util.IsDate(p_Date_1)){return "invalid date: '" + p_Date_1 + "'";}
    if(!Sforce.Util.IsDate(p_Date_2)){return "invalid date: '" + p_Date_2 + "'";}
    var dt1 = new Date(p_Date_1);
    var dt2 = new Date(p_Date_2);
    
    // get ms between dates (UTC) and make into "difference" date
    var iDiffMS = dt2.valueOf() - dt1.valueOf();
    var dtDiff = new Date(iDiffMS);

    // calc various diffs
    var nYears  = dt2.getUTCFullYear() - dt1.getUTCFullYear();
    var nMonths = dt2.getUTCMonth() - dt1.getUTCMonth() + (nYears!=0 ? nYears*12 : 0);
    var nQuarters = parseInt(nMonths/3);    
    
    var nMilliseconds = iDiffMS;
    var nSeconds = parseInt(iDiffMS/1000);
    var nMinutes = parseInt(nSeconds/60);
    var nHours = parseInt(nMinutes/60);
    var nDays  = parseInt(nHours/24);
    var nWeeks = parseInt(nDays/7);


    // return requested difference
    var iDiff = 0;        
    switch(p_Interval.toLowerCase()){
        case "yyyy": return nYears;
        case "q": return nQuarters;
        case "m": return nMonths;
        case "y":         // day of year
        case "d": return nDays;
        case "w": return nDays;
        //case "ww":return nWeeks;        // week of year    // <-- inaccurate
        case "h": return nHours;
        case "n": return nMinutes;
        case "s": return nSeconds;
        case "ms":return nMilliseconds;    // millisecond    
        default: return "invalid interval: '" + p_Interval + "'";
    }
}

// Show the debug window
function showDebug() {
	window.top.debugWindow =
	  window.open("",
				  "Debug",
				  "left=0,top=0,width=300,height=700,scrollbars=yes,"
				  +"status=yes,resizable=yes");
	window.top.debugWindow.opener = self;
	// open the document for writing
	window.top.debugWindow.document.open();
	window.top.debugWindow.document.write(
	  "<HTML><HEAD><TITLE>Debug Window</TITLE></HEAD><BODY><PRE>\n");
	//sforceClient.debuglog.show();
}

// If the debug window exists, then write to it
function debug(val) {
	if (window.top.debugWindow && ! window.top.debugWindow.closed) {
		window.top.debugWindow.document.write(val+"\n"); 
	}
	//sforceClient.debuglog.writeln(val);
}

//Return the 'n' number of characters from the left of the string
function Left(str, n){
	if (n <= 0)
	    return "";
	else if (n > String(str).length)
	    return str;
	else
	    return String(str).substring(0,n);
}

//Displays a message in the message area
function displayMessage(val,clearArea){
	document.getElementById("progressBar").className = 'hidden';
	if(clearArea)
		document.getElementById("output").innerHTML = checkForNull(val);
	else
		document.getElementById("output").innerHTML += "<BR>" + checkForNull(val);
	document.getElementById("output").className = 'visible';
}

//Called on scontrol completion
function shutDown() {
	//window.opener.location.reload(true);
	if(lastone == "true")
		closynoshowsme();
}

var browserName=navigator.appName; 
if (browserName=="Netscape") { 

function closynoshowsme() { 
	window.open('','_parent',''); 
	window.close();} 
} else { 
	if (browserName=="Microsoft Internet Explorer") { 
		function closynoshowsme() { 
			window.opener = "whocares"; 
			window.close(); 
		} 
	} 
} 
</SCRIPT> 
<body onload="startup1();" class="setup ">
<TABLE cellSpacing=0 cellPadding=8 width="100%" border=0>
<TR>
<TD>
  <DIV class=alertBox>
  <DIV class=content>
  <TABLE cellSpacing=5 cellPadding=0 width="100%" border=0>
    <TBODY>
    <TR>
      <TD noWrap colSpan=2><SPAN class=bodyBold>Running All Workflow Tips</SPAN></TD></TR>
    <TR>
      <TD class=blackLine colSpan=2 height=1><IMG height=1 alt="" src="cool.thmk_files/s.gif" width=1 border=0></TD></TR>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>This proceess evaluates all workflow schedules and determines which active schedules should run based on the last run date
	and the user defined schedule frequency. impacting a large number of records and updates can take several minutes to complete</TD></TR>
	<TR>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>The window stays open until all schedules are completed upon which this window closes</TD></TR>
	<TR>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>The length of the process will depend on the number of schedules and the number of records and updates within each schedule</TD></TR>
    <TR>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>If this process is not being called by an automated scheduler to kick off the process, consider doing so. Refer to the customization and 
		enhancement guide in the AppExchange listing for details</TD></TR>
    <TR>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>Schedule specific errors are reported in detail in the "Schedule Messages" related list for the respective schedule</TD></TR>
    <TR>
    <tr>
      <TD vAlign=top align=right width="1%"><li></li></TD>
      <TD vAlign=top align=left>	  
      <div id="header"></div>
      <div id="output"></div><br></TD>
    </tr>	  
	</TBODY>
	</table>
  	</DIV>
  	</DIV>
	</TD>
	</TR>
</TABLE>
<script type="text/javascript"> 
startup();
//if(runstartup){
//	runstartup = false;
//	startup();
//}
</script>
</body>
</html>