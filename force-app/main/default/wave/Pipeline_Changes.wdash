{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1360,"name":"Default","numColumns":48,"pages":[{"name":"c4c1b6c6-293d-440e-ad94-43a0975de476","navigationHidden":false,"widgets":[{"colspan":10,"column":1,"name":"text_2","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["top"],"borderRadius":4,"borderWidth":1}},{"colspan":5,"column":31,"name":"link_1","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(60, 141, 225)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":5,"column":37,"name":"link_3","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":48,"column":0,"name":"container_2","row":1,"rowspan":2,"widgetStyle":{"borderColor":"rgb(60, 141, 225)","borderEdges":["bottom"]}},{"colspan":6,"column":1,"name":"list_manager_role","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":6,"name":"number_1","row":10,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":41,"name":"listselector_2","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":8,"name":"list_direct_reports","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":15,"name":"list_opportunity_type","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":26,"name":"link_2","row":2,"rowspan":1,"widgetStyle":{"borderEdges":[],"borderWidth":1}},{"colspan":14,"column":0,"name":"container_4","row":9,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":32,"column":15,"name":"chart_1","row":7,"rowspan":8,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":[],"borderWidth":8}},{"colspan":5,"column":1,"name":"text_1","row":10,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(68, 81, 125)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":0,"name":"container_5","row":12,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#F2F6FA","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":1,"name":"text_4","row":13,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":6,"name":"number_2","row":13,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"container_6","row":5,"rowspan":4,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":1,"name":"number_3","row":6,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":9,"name":"number_4","row":6,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderEdges":["top"],"borderRadius":0,"borderWidth":20}},{"colspan":48,"column":0,"name":"container_1","row":15,"rowspan":11,"widgetStyle":{"borderEdges":["top"]}},{"colspan":46,"column":1,"name":"table_1","row":17,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":10,"column":1,"name":"text_3","row":15,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":6,"column":22,"name":"ui_RecordType_Name","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_7","row":3,"rowspan":2,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":["top"],"borderRadius":0,"borderWidth":20}},{"colspan":34,"column":14,"name":"container_8","row":5,"rowspan":10,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["bottom","top"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":8,"name":"container_9","row":5,"rowspan":4,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":41,"name":"listselector_5","row":16,"rowspan":1,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":40,"name":"text_5","row":15,"rowspan":1,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":8}}]}],"selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#C5D3E0","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1.0},{"name":"Phone","numColumns":24,"pages":[{"name":"c4c1b6c6-293d-440e-ad94-43a0975de476","navigationHidden":false,"widgets":[{"colspan":20,"column":2,"name":"listselector_2","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":0,"name":"number_3","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":18,"name":"number_4","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"{{coalesce(cell(pipeline_change_color.result, 0, \"color\"),0).asString()}}","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":1,"name":"text_3","row":22,"rowspan":1,"widgetStyle":{"backgroundColor":"#A3B8CC","borderEdges":[]}},{"colspan":22,"column":1,"name":"table_1","row":23,"rowspan":9,"widgetStyle":{"borderColor":"#A3B8CC","borderEdges":["all"],"borderWidth":4}},{"colspan":24,"column":0,"name":"container_1","row":21,"rowspan":11,"widgetStyle":{"backgroundColor":"#A3B8CC","borderColor":"#091A3E","borderEdges":["right","left","top"],"borderWidth":2}},{"colspan":11,"column":13,"name":"number_5","row":17,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":0,"name":"number_6","row":17,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":13,"name":"listselector_6","row":22,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#A3B8CC","borderEdges":["all"],"borderRadius":0,"borderWidth":2}},{"colspan":24,"column":0,"name":"chart_2","row":7,"rowspan":10,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":24,"column":0,"name":"text_6","row":0,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":20,"column":2,"name":"list_manager_role","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#091A3E","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1.0}],"layouts":[],"steps":{"pipeline_change_color":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"pipeline_trending3\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(pipeline_change.result, 0, \\\"sum_Amount\\\"),0).asObject()}}  as 'sum_Amount'; q = foreach q generate (case when 'sum_Amount' > 0 then \\\"#3CAF6D\\\" when 'sum_Amount' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color', 'sum_Amount' as 'sum_Amount'; \",\"groups\":[\"color\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"type":"aggregateflex","useGlobal":true},"dropdown_record_type":{"broadcastFacet":false,"datasets":[{"name":"opportunity3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RecordType.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false},"pipeline_start":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"START = load \\\"pipeline_trending3\\\"; START = filter START by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; START = filter START by {{column(dropdown_opportunity_type.selection, [\\\"Opportunity_Classification__c\\\"]).asEquality(\\\"Opportunity.Opportunity_Classification__c\\\")}}; START = filter START by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; START = filter START by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; START = filter START by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidFrom\\\").asString()}}]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidTo\\\").asString()}}]; START = filter START by 'Stage.IsClosed' == \\\"false\\\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; START = group START by all; START = foreach START generate \\\"0_START\\\" as 'Bucket', sum('Amount') as 'sum_Amount';\"}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"type":"aggregateflex","useGlobal":true},"step_hbar_group":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"$ High to Low\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"$ High to Low\",\"value\":\"'sum_Amount' desc\"}","{\"display\":\"$ Low to High\",\"value\":\"'sum_Amount' asc\"}"]},"step_time":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"Last 7 days (Month Close)\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"Last 7 days (Month Close)\",\"CloseDate_1\":\"\\\"current month\\\"..\\\"current month\\\"\",\"CloseDate_2\":\"\\\"current month\\\"..\\\"current month\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"8 days ago\\\"\",\"Start_ValidTo\":\"\\\"7 days ago\\\"..\",\"Update_End_ValidFrom\":\"\\\"7 days ago\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"8 days ago\\\"\",\"Update_ValidTo\":\"\\\"7 days ago\\\"..\\\"current day\\\"\"}","{\"display\":\"Last 14 days (Month Close)\",\"CloseDate_1\":\"\\\"current month\\\"..\\\"current month\\\"\",\"CloseDate_2\":\"\\\"current month\\\"..\\\"current month\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"15 days ago\\\"\",\"Start_ValidTo\":\"\\\"14 days ago\\\"..\",\"Update_End_ValidFrom\":\"\\\"14 days ago\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"15 days ago\\\"\",\"Update_ValidTo\":\"\\\"14 days ago\\\"..\\\"current day\\\"\"}","{\"display\":\"Last 7 days (Quarter Close)\",\"CloseDate_1\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"CloseDate_2\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"8 days ago\\\"\",\"Start_ValidTo\":\"\\\"7 days ago\\\"..\",\"Update_End_ValidFrom\":\"\\\"7 days ago\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"8 days ago\\\"\",\"Update_ValidTo\":\"\\\"7 days ago\\\"..\\\"current day\\\"\"}","{\"display\":\"Last 14 days (Quarter Close)\",\"CloseDate_1\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"CloseDate_2\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"15 days ago\\\"\",\"Start_ValidTo\":\"\\\"14 days ago\\\"..\",\"Update_End_ValidFrom\":\"\\\"14 days ago\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"15 days ago\\\"\",\"Update_ValidTo\":\"\\\"14 days ago\\\"..\\\"current day\\\"\"}","{\"display\":\"This Month\",\"CloseDate_1\":\"\\\"current month\\\"..\\\"current month\\\"\",\"CloseDate_2\":\"\\\"current month\\\"..\\\"current month\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"1 month ago\\\"\",\"Start_ValidTo\":\"\\\"current month\\\"..\",\"Update_End_ValidFrom\":\"\\\"current month\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"1 month ago\\\"\",\"Update_ValidTo\":\"\\\"current month\\\"..\\\"current day\\\"\"}","{\"display\":\"This Quarter\",\"CloseDate_1\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"CloseDate_2\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"End_ValidFrom\":\"..\\\"current day\\\"\",\"End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Start_ValidFrom\":\"..\\\"1 quarter ago\\\"\",\"Start_ValidTo\":\"\\\"current quarter\\\"..\",\"Update_End_ValidFrom\":\"\\\"current quarter\\\"..\\\"current day\\\"\",\"Update_End_ValidTo\":\"\\\"1 day ahead\\\"..\",\"Update_ValidFrom\":\"..\\\"1 quarter ago\\\"\",\"Update_ValidTo\":\"\\\"current quarter\\\"..\\\"current day\\\"\"}"]},"Opportunity_Account__1":{"broadcastFacet":true,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Opportunity.Account.Record_Type__pc\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar"}},"Id_2":{"broadcastFacet":false,"datasets":[{"name":"user3"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"a = load \\\"user3\\\";\\na = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}};\\na = group a by 'Name';\\na = foreach a generate 'Name' as 'Name';\\n\",\"measures\":[],\"groups\":[\"Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false},"Id_1":{"broadcastFacet":false,"datasets":[{"name":"opportunity3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Role.ParentRole.DeveloperName\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[\"!{user.rolename}\"]","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"visualizationType":"hbar"}},"pipeline_change":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Amount\"],[\"sum\",\"percent\"]],\"pigql\":\"x1 = load \\\"pipeline_trending3\\\"; x1 = filter x1 by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; x1 = filter x1 by {{column(dropdown_opportunity_type.selection, [\\\"Opportunity_Classification__c\\\"]).asEquality(\\\"Opportunity.Opportunity_Classification__c\\\")}}; x1 = filter x1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; x1 = filter x1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; START = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidFrom\\\").asString()}}]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidTo\\\").asString()}}]; START = filter START by 'Stage.IsClosed' == \\\"false\\\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; END = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidFrom\\\").asString()}}]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidTo\\\").asString()}}]; END = filter END by 'Stage.IsClosed' == \\\"false\\\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; c = group START by all full, END by all; c = foreach c generate coalesce(sum(END['Amount']),0) - coalesce(sum(START['Amount']),0) as 'sum_Amount', coalesce( (coalesce(sum(END['Amount']),0) - coalesce(sum(START['Amount']),0)) / coalesce(sum(START['Amount']),0),0) as 'sum_percent';\"}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"type":"aggregateflex","useGlobal":true},"waterfall_chart":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"x1 = load \\\"pipeline_trending3\\\"; \\nx1 = filter x1 by 'Id' in all; \\nx1 = filter x1 by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; \\nx1 = filter x1 by {{column(dropdown_opportunity_type.selection, [\\\"Opportunity_Classification__c\\\"]).asEquality(\\\"Opportunity.Opportunity_Classification__c\\\")}}; \\nx1 = filter x1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; \\nx1 = filter x1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; \\nSTART_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidFrom\\\").asString()}}]; \\nSTART_REAL = filter START_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidTo\\\").asString()}}]; \\nSTART_REAL = filter START_REAL by 'Stage.IsClosed' == \\\"false\\\"; \\nSTART_REAL = filter START_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; \\nSTART_REAL = group START_REAL by all; \\nSTART_REAL = foreach START_REAL generate \\\"0_START\\\" as 'Bucket', sum('Amount') as 'sum_Amount'; \\nSTART_FAKE = group x1 by all; \\nSTART_FAKE = foreach START_FAKE generate \\\"0_START\\\" as 'Bucket', (count() - count()) as 'sum_Amount'; \\nSTART = union START_FAKE, START_REAL; \\nSTART = group START by all; \\nSTART = foreach START generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; \\nEND_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidFrom\\\").asString()}}]; \\nEND_REAL = filter END_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidTo\\\").asString()}}]; \\nEND_REAL = filter END_REAL by 'Stage.IsClosed' == \\\"false\\\"; \\nEND_REAL = filter END_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; \\nEND_REAL = group END_REAL by all; \\nEND_REAL = foreach END_REAL generate \\\"9_END\\\" as 'Bucket', sum('Amount') as 'sum_Amount'; \\nEND_FAKE = group x1 by all; \\nEND_FAKE = foreach END_FAKE generate \\\"9_END\\\" as 'Bucket', (count() - count()) as 'sum_Amount'; \\nEND = union END_FAKE, END_REAL; \\nEND = group END by all; \\nEND = foreach END generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; \\nupd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_ValidFrom\\\").asString()}}]; \\nupd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_ValidTo\\\").asString()}}]; \\nupd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_End_ValidFrom\\\").asString()}}]; \\nupd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_End_ValidTo\\\").asString()}}]; \\nupd = group upd_start by OpportunityId right, upd_end by OpportunityId; \\nupd = foreach upd generate upd_end.'OpportunityId' as OpportunityId, upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opportunity.Owner.Name') as 'Opportunity.Owner.Name', last(upd_end.'Opportunity.Owner.Role.Name') as 'Opportunity.Owner.Role.Name', last(upd_end.'Opportunity.Account.Class_Description__c') as 'Opportunity.Account.Class_Description__c', last(upd_end.'Opportunity.Account.ShippingState') as 'Opportunity.Account.ShippingState'; \\nupd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'Stage.IsClosedEnd' == \\\"true\\\" and 'Stage.IsWonEnd' == \\\"false\\\" ) then \\\"8_CLOSED_LOST\\\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'Stage.IsClosedEnd' == \\\"true\\\" and 'Stage.IsWonEnd' == \\\"true\\\" ) then \\\"7_CLOSED_WON\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; \\nupd_full_closed = filter upd_full_closed by 'Bucket' != \\\"OTHER\\\"; \\nupd_full_closed = group upd_full_closed by 'Bucket'; \\nupd_full_closed = foreach upd_full_closed generate 'Bucket', ( case 'Bucket' when \\\"8_CLOSED_LOST\\\" then -sum('AmountEnd') when \\\"7_CLOSED_WON\\\" then -sum('AmountEnd') end ) as 'sum_Amount'; \\nupd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}]) ) then \\\"5_MOVED_OUT\\\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] ) then \\\"1_NEW\\\" when ( not 'New' and 'Stage.IsClosedStart' == \\\"true\\\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] ) then \\\"2_REOPEN\\\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and (('Stage.IsClosedStart' == \\\"false\\\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}])) or ('Stage.IsClosedStart' == \\\"true\\\")) ) then \\\"4_MOVED_IN\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; \\nupd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \\\"OTHER\\\"; \\nupd_full_notinperiod = group upd_full_notinperiod by 'Bucket'; \\nupd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \\\"5_MOVED_OUT\\\" then -sum('AmountEnd') when \\\"1_NEW\\\" then sum('AmountEnd') when \\\"2_REOPEN\\\" then sum('AmountEnd') when \\\"4_MOVED_IN\\\" then sum('AmountEnd') end ) as 'sum_Amount'; \\nupd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \\\"6_REDUCE\\\" when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \\\"3_EXPAND\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; \\nupd_delta = filter upd_delta by 'Bucket' != \\\"OTHER\\\"; \\nupd_delta = group upd_delta by 'Bucket'; \\nupd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \\\"6_REDUCE\\\" then sum('AmountEnd') - sum('AmountStart') when \\\"3_EXPAND\\\" then sum('AmountEnd') - sum('AmountStart') end ) as 'sum_Amount'; \\nWATERFALL = union START,upd_full_notinperiod,upd_delta,upd_full_closed, END; \\nWATERFALL = order WATERFALL by 'Bucket' asc; \\n\",\"measures\":[[\"count\",\"*\",\"sum_Amount\"]],\"measuresMap\":{},\"groups\":[\"Bucket\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","type":"aggregateflex","useGlobal":false},"waterfall_detail":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"pigql\":\"x1 = load \\\"pipeline_trending3\\\"; \\nx1 = filter x1 by 'Id' in all; \\nx1 = filter x1 by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; \\nx1 = filter x1 by {{column(dropdown_opportunity_type.selection, [\\\"Opportunity_Classification__c\\\"]).asEquality(\\\"Opportunity.Opportunity_Classification__c\\\")}}; \\nx1 = filter x1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; \\nx1 = filter x1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; \\nSTART = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidFrom\\\").asString()}}]; \\nSTART = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Start_ValidTo\\\").asString()}}]; \\nSTART = filter START by 'Stage.IsClosed' == \\\"false\\\"; \\nSTART = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; \\nSTART = foreach START generate \\\"0_START\\\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opportunity.Account.Name' as 'Opportunity.Account.Name', 'Opportunity.Name' as 'Opportunity.Name', 'Opportunity.Owner.Name' as 'Opportunity.Owner.Name', 'Opportunity.Amount' as 'Opportunity.Amount', 'Opportunity.CloseDate' as 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName' as 'Opportunity.ForecastCategoryName', 'Opportunity.StageName' as 'Opportunity.StageName'; \\nEND = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidFrom\\\").asString()}}]; \\nEND = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidTo\\\").asString()}}]; \\nEND = filter END by 'Stage.IsClosed' == \\\"false\\\"; \\nEND = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; \\nEND = foreach END generate \\\"9_END\\\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opportunity.Account.Name' as 'Opportunity.Account.Name', 'Opportunity.Name' as 'Opportunity.Name', 'Opportunity.Owner.Name' as 'Opportunity.Owner.Name', 'Opportunity.Amount' as 'Opportunity.Amount', 'Opportunity.CloseDate' as 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName' as 'Opportunity.ForecastCategoryName', 'Opportunity.StageName' as 'Opportunity.StageName'; \\nupd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_ValidFrom\\\").asString()}}]; \\nupd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_ValidTo\\\").asString()}}]; \\nupd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_End_ValidFrom\\\").asString()}}]; \\nupd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"Update_End_ValidTo\\\").asString()}}]; \\nupd = group upd_start by OpportunityId right, upd_end by OpportunityId; \\nupd = foreach upd generate upd_end.'OpportunityId' as 'OpportunityId', upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opportunity.Account.Name') as 'Opportunity.Account.Name', last(upd_end.'Opportunity.Name') as 'Opportunity.Name', last(upd_end.'Opportunity.Owner.Name') as 'Opportunity.Owner.Name', last(upd_end.'Opportunity.Amount') as 'Opportunity.Amount', last(upd_end.'Opportunity.CloseDate') as 'Opportunity.CloseDate', last(upd_end.'Opportunity.ForecastCategoryName') as 'Opportunity.ForecastCategoryName', last(upd_end.'Opportunity.StageName') as 'Opportunity.StageName', last(upd_end.'Opportunity.Owner.Role.Name') as 'Opportunity.Owner.Role.Name', last(upd_end.'Opportunity.Account.Class_Description__c') as 'Opportunity.Account.Class_Description__c', last(upd_end.'Opportunity.Account.ShippingState') as 'Opportunity.Account.ShippingState'; \\nupd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'Stage.IsClosedEnd' == \\\"true\\\" and 'Stage.IsWonEnd' == \\\"false\\\" ) then \\\"8_CLOSED_LOST\\\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'Stage.IsClosedEnd' == \\\"true\\\" and 'Stage.IsWonEnd' == \\\"true\\\" ) then \\\"7_CLOSED_WON\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; \\nupd_full_closed = filter upd_full_closed by 'Bucket' != \\\"OTHER\\\"; \\nupd_full_closed = foreach upd_full_closed generate 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', ( case 'Bucket' when \\\"8_CLOSED_LOST\\\" then (0 - 'AmountEnd') when \\\"7_CLOSED_WON\\\" then (0 - 'AmountEnd') end ) as 'Amount'; \\nupd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}]) ) then \\\"5_MOVED_OUT\\\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] ) then \\\"1_NEW\\\" when ( not 'New' and 'Stage.IsClosedStart' == \\\"true\\\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] ) then \\\"2_REOPEN\\\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and (('Stage.IsClosedStart' == \\\"false\\\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}])) or ('Stage.IsClosedStart' == \\\"true\\\")) ) then \\\"4_MOVED_IN\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; \\nupd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \\\"OTHER\\\"; \\nupd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \\\"5_MOVED_OUT\\\" then (0 - 'AmountEnd') when \\\"1_NEW\\\" then 'AmountEnd' when \\\"2_REOPEN\\\" then 'AmountEnd' when \\\"4_MOVED_IN\\\" then 'AmountEnd' end ) as 'Amount', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName'; \\nupd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \\\"6_REDUCE\\\" when ( not 'New' and 'Stage.IsClosedStart' == \\\"false\\\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \\\"CloseDate_2\\\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \\\"3_EXPAND\\\" else \\\"OTHER\\\" end ) as 'Bucket', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'AmountStart', 'AmountEnd'; \\nupd_delta = filter upd_delta by 'Bucket' != \\\"OTHER\\\"; \\nupd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \\\"6_REDUCE\\\" then 'AmountEnd' - 'AmountStart' when \\\"3_EXPAND\\\" then 'AmountEnd' - 'AmountStart' end ) as 'Amount', 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.Amount', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName'; \\nWATERFALL = union START, upd_full_notinperiod, upd_delta, upd_full_closed, END; \\nWATERFALL = filter WATERFALL by  {{column(waterfall_chart.selection, [\\\"Bucket\\\"]).asEquality(\\\"Bucket\\\")}}; \\nWATERFALL = group WATERFALL by 'OpportunityId'; \\nWATERFALL = foreach WATERFALL generate last('OpportunityId') as 'OpportunityId', last('Opportunity.Account.Name') as 'Opportunity.Account.Name', last('Opportunity.Name') as 'Opportunity.Name', last('Opportunity.Owner.Name') as 'Opportunity.Owner.Name', last('Opportunity.Amount') as 'Opportunity.Amount', last('Opportunity.CloseDate') as 'Opportunity.CloseDate', last('Opportunity.ForecastCategoryName') as 'Opportunity.ForecastCategoryName', last('Opportunity.StageName') as 'Opportunity.StageName', last('Amount') as 'Amount'; \\nWATERFALL = foreach WATERFALL generate 'OpportunityId', 'Opportunity.Account.Name', 'Opportunity.Name', 'Opportunity.Owner.Name', 'Opportunity.CloseDate', 'Opportunity.ForecastCategoryName', 'Opportunity.StageName', 'Opportunity.Amount', sum('Amount') as 'sum_Amount'; \\nWATERFALL = order WATERFALL by {{cell(step_hbar_group.selection, 0, \\\"value\\\").asString()}}; \\nWATERFALL = limit WATERFALL 100; \\n\",\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[\"Opportunity.Name\",\"Opportunity.Owner.Name\",\"Opportunity.ForecastCategoryName\",\"Opportunity.StageName\",\"Opportunity.CloseDate\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"type":"aggregateflex","useGlobal":false},"pipeline_end":{"broadcastFacet":false,"datasets":[{"name":"pipeline_trending3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"END = load \\\"pipeline_trending3\\\"; END = filter END by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; END = filter END by {{column(dropdown_opportunity_type.selection, [\\\"Opportunity_Classification__c\\\"]).asEquality(\\\"Opportunity.Opportunity_Classification__c\\\")}}; END = filter END by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; END = filter END by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; END = filter END by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidFrom\\\").asString()}}]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [{{cell(step_time.selection, 0, \\\"End_ValidTo\\\").asString()}}]; END = filter END by 'Stage.IsClosed' == \\\"false\\\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \\\"CloseDate_1\\\").asString()}}]; END = group END by all; END = foreach END generate \\\"9_END\\\" as 'Bucket', sum('Amount') as 'sum_Amount';\"}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"type":"aggregateflex","useGlobal":true},"dropdown_opportunity_type":{"broadcastFacet":false,"datasets":[{"name":"opportunity3"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Opportunity_Classification__c\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","type":"aggregateflex","useGlobal":false}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"number_6":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"pipeline_start","textAlignment":"center","title":"Starting Pipeline","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"list_direct_reports":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Id_2","title":"Direct Reports"},"type":"listselector"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"list_manager_role":{"parameters":{"compact":false,"displayMode":"combo","exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"count","showActionMenu":false,"step":"Id_1","title":"Manager Role"},"type":"listselector"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_6":{"parameters":{"alignmentX":"center","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"rgb(23, 50, 77)"},"insert":"Opportunity Details"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"text_2":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"24px","color":"#091A3E"},"insert":"Pipeline Changes"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#5C7A99"},"insert":"Sort Pipeline Amount by:"},{"attributes":{"align":"center"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#FFFFFF"},"insert":"Starting Pipeline"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"chart_2":{"parameters":{"autoFitMode":"fit","totalValue":"computeTotal","showValues":true,"legend":{"showHeader":true,"show":true,"position":"right-top","inside":false},"axisMode":"multi","visualizationType":"hbar","exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"textColor":"#FFFFFF","totalLabel":"","showActionMenu":true,"measureAxis2":{"showTitle":true,"showAxis":true,"title":""},"measureAxis1":{"showTitle":true,"showAxis":true,"title":""},"step":"waterfall_chart","theme":"dark","dimensionAxis":{"showTitle":true,"showAxis":true,"title":""}},"type":"chart"},"chart_1":{"parameters":{"totalValue":"useLastBucket","showValues":true,"positiveColor":"rgb(46, 194, 186)","visualizationType":"waterfall","exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"textColor":"#FFFFFF","startColor":"rgb(68, 162, 245)","totalLabel":"","showActionMenu":true,"measureAxis1":{"showTitle":false,"showAxis":true,"title":""},"totalColor":"rgb(68, 162, 245)","step":"waterfall_chart","theme":"light","negativeColor":"rgb(146, 113, 232)","dimensionAxis":{"showTitle":false,"showAxis":true,"title":""}},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"20px","color":"#FFFFFF"},"insert":"Pipeline Changes"},{"attributes":{"align":"center"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"list_opportunity_type":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"dropdown_opportunity_type","title":"Opportunity Classification"},"type":"listselector"},"listselector_6":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"step_hbar_group","title":""},"type":"listselector"},"listselector_2":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"measureField":"none","showActionMenu":false,"step":"step_time","title":"Time Period"},"type":"listselector"},"ui_RecordType_Name":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":false,"measureField":"none","showActionMenu":false,"step":"dropdown_record_type","title":"Record Type"},"type":"listselector"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#FFFFFF"},"insert":"Today's pipeline"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"listselector_5":{"parameters":{"compact":false,"displayMode":"combo","expanded":true,"exploreLink":false,"filterStyle":{"titleColor":"#091A3E","valueColor":"#17324D"},"instant":true,"showActionMenu":false,"step":"step_hbar_group","title":""},"type":"listselector"},"link_3":{"parameters":{"destination":"0FKC0000000L8qtOAC","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Team Productivity","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_1":{"parameters":{"destination":"0FKC0000000L8qmOAC","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Pipeline Changes","textAlignment":"center","textColor":"rgb(60, 141, 225)"},"type":"link"},"link_2":{"parameters":{"destination":"0FKC0000000L8qpOAC","destinationType":"dashboard","fontSize":14,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"table_1":{"parameters":{"columnProperties":{},"columns":[],"customBulkActions":[],"exploreLink":true,"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","showActionMenu":true,"step":"waterfall_detail"},"type":"table"},"number_5":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"pipeline_end","textAlignment":"center","title":"Today's Pipeline","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_percent","numberColor":"#FFFFFF","numberSize":16,"showActionMenu":true,"step":"pipeline_change","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":12,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_3":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"pipeline_change","textAlignment":"left","title":"Pipeline Change","titleColor":"#FFFFFF","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"pipeline_start","textAlignment":"right","title":"","titleColor":"#FFFFFF","titleSize":12,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"pipeline_end","textAlignment":"center","title":"","titleColor":"#FFFFFF","titleSize":12,"tooltip":{"customizeTooltip":false}},"type":"number"}}}